<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.IIE.Industrial_Innovation_Engine_server.mapper.GameMapper">

    <resultMap id="gameWithTagsMap" type="com.IIE.Industrial_Innovation_Engine_server.entity.Game">
        <id property="id" column="id"/>
        <result property="gameName" column="game_name"/>
        <result property="gameDescription" column="game_description"/>
        <result property="gameUrl" column="game_url"/>
        <result property="gamePicture" column="game_picture"/>
        <result property="status" column="status"/>
        <result property="gameBelong" column="game_belong"/>
        <result property="examineDescription" column="examine_description"/>
        <!-- 嵌套标签集合 -->
        <collection property="tags" ofType="com.IIE.Industrial_Innovation_Engine_server.entity.Tag">
            <id property="id" column="tag_id"/>
            <result property="tagName" column="tag_name"/>
            <result property="tagDescription" column="tag_description"/>
        </collection>
    </resultMap>

    <select id="getUserGames" resultMap="gameWithTagsMap">
        SELECT
            g.id,
            g.game_name,
            g.game_description,
            g.game_url,
            g.game_picture,
            g.status,
            g.game_belong,
            g.examine_description,
            t.id AS tag_id,
            t.tag_name,
            t.tag_description
        FROM games g
                 LEFT JOIN game_tag gt ON g.id = gt.game_id
                 LEFT JOIN tags t ON gt.tag_id = t.id
        WHERE g.game_belong = #{id}
    </select>

    <select id="getPendingGames" resultMap="gameWithTagsMap">
        SELECT
            g.id,
            g.game_name,
            g.game_description,
            g.game_url,
            g.game_picture,
            g.status,
            g.game_belong,
            g.examine_description,
            t.id AS tag_id,
            t.tag_name,
            t.tag_description
        FROM games g
                 LEFT JOIN game_tag gt ON g.id = gt.game_id
                 LEFT JOIN tags t ON gt.tag_id = t.id
        WHERE g.status = 'UNAPPROVED'
    </select>

    <select id="did_it_belong_me" resultType="boolean">
        SELECT COUNT(*)>0 FROM games WHERE game_belong = #{id} AND id = #{gameId}
    </select>

    <select id="getGameStatus" resultType="java.lang.String">
        SELECT status FROM games WHERE id = #{gameId}
    </select>

    <update id="changeGameStatus">
        UPDATE games SET status = #{status}, examine_description = #{description} WHERE id = #{gameId}
    </update>

    <insert id="createGame" parameterType="com.IIE.Industrial_Innovation_Engine_server.entity.Game" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO games (
            game_name,
            game_description,
            game_url,
            game_picture,
            game_belong,
            status,
            examine_description
        ) VALUES (
                     #{gameName},
                     #{gameDescription},
                     #{gameUrl},
                     #{gamePicture},
                     #{gameBelong},
                     #{status},
                     #{examineDescription}
                 )
    </insert>

    <select id="getTagByName" resultType="com.IIE.Industrial_Innovation_Engine_server.entity.Tag">
        SELECT * FROM tags WHERE tag_name = #{tagName}
    </select>

    <insert id="insertTag" parameterType="com.IIE.Industrial_Innovation_Engine_server.entity.Tag" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tags (tag_name, tag_description)
        VALUES (#{tagName}, #{tagDescription})
    </insert>

    <select id="checkTagExists" resultType="boolean">
        SELECT COUNT(*) > 0 FROM tags WHERE id = #{tagId}
    </select>

    <insert id="insertGameTag">
        INSERT INTO game_tag (game_id, tag_id)
        VALUES (#{gameId}, #{tagId})
    </insert>

    <update id="reviewGame">
        UPDATE games SET status = #{status}, examine_description = #{examineDescription} WHERE id = #{gameId}
    </update>

    <select id="getGameById" resultMap="gameWithTagsMap">
        SELECT
            g.id,
            g.game_name,
            g.game_description,
            g.game_url,
            g.game_picture,
            g.status,
            g.game_belong,
            g.examine_description,
            t.id AS tag_id,
            t.tag_name,
            t.tag_description
        FROM games g
                 LEFT JOIN game_tag gt ON g.id = gt.game_id
                 LEFT JOIN tags t ON gt.tag_id = t.id
        WHERE g.game_belong = #{id} AND g.id = #{gameId}
    </select>

    <!-- 更新游戏基本信息 -->
    <update id="updateGame" parameterType="com.IIE.Industrial_Innovation_Engine_server.entity.Game">
        UPDATE games
        SET
            game_name = #{gameName},
            game_description = #{gameDescription},
            game_url = #{gameUrl},
            game_picture = #{gamePicture}
        WHERE id = #{id}
    </update>

    <!-- 删除游戏的所有标签关联 -->
    <delete id="deleteGameTags">
        DELETE FROM game_tag WHERE game_id = #{gameId}
    </delete>

    <!-- 批量插入游戏标签关联 -->
    <insert id="insertGameTagsBatch" parameterType="java.util.List">
        INSERT INTO game_tag (game_id, tag_id)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.gameId}, #{item.tagId})
        </foreach>
    </insert>

    <!-- 搜索游戏 -->
    <select id="searchGames" resultMap="gameWithTagsMap" parameterType="com.IIE.Industrial_Innovation_Engine_server.dto.SearchRequest">
        SELECT DISTINCT
        g.id,
        g.game_name,
        g.game_description,
        g.game_url,
        g.game_picture,
        g.status,
        g.game_belong,
        g.examine_description,
        t.id AS tag_id,
        t.tag_name,
        t.tag_description
        FROM games g
        LEFT JOIN game_tag gt ON g.id = gt.game_id
        LEFT JOIN tags t ON gt.tag_id = t.id
        WHERE
        g.status != 'DELETED'
        AND (
        g.status = 'PUBLIC'
        OR g.game_belong = #{myId}
        )
        <if test="wannaMe != null and !wannaMe">
            AND g.game_belong != #{myId}
        </if>
        <if test="keyword != null and keyword != ''">
            AND (
            g.game_name LIKE CONCAT('%', #{keyword}, '%')
            OR g.game_description LIKE CONCAT('%', #{keyword}, '%')
            OR t.tag_name LIKE CONCAT('%', #{keyword}, '%')
            OR t.tag_description LIKE CONCAT('%', #{keyword}, '%')
            )
        </if>
        ORDER BY g.id
    </select>

    <delete id="deleteGame">
        DELETE FROM games WHERE id = #{gameId}
    </delete>
</mapper>
